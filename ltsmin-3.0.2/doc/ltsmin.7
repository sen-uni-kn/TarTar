'\" t
.\"     Title: ltsmin
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 12/17/2018
.\"    Manual: LTSmin Manual
.\"    Source: LTSmin 3.0.2
.\"  Language: English
.\"
.TH "LTSMIN" "7" "12/17/2018" "LTSmin 3\&.0\&.2" "LTSmin Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ltsmin \- Overview of the LTSmin toolset\&.
.SH "SYNOPSIS"
.sp
This man page provides an overview of the tools in the LTSmin toolset\&.
.SH "LANGUAGE MODULES"
.sp
The LTSmin toolset was designed to support multiple languages\&. All tools for a specific language start with a prefix that indicates the language\&. Below, we list the languages and the prefixes that are supported in this release:
.PP
DVE (dve)
.RS 4
The DVE language\&. See the
\m[blue]\fBDiVinE website\fR\m[]\&\s-2\u[1]\d\s+2\&.
.RE
.PP
ETF (etf)
.RS 4
The Enumerated Table Format is an intermediate format for models in the LTSmin toolset\&. See
\fBetf\fR(5)\&.
.RE
.PP
mCRL2 (lps)
.RS 4
The mCRL2 language\&. See the
\m[blue]\fBmCRL2 website\fR\m[]\&\s-2\u[2]\d\s+2\&.
.RE
.PP
muCRL (lpo)
.RS 4
The muCRL language\&. See the
\m[blue]\fBmuCRL website\fR\m[]\&\s-2\u[3]\d\s+2\&.
.RE
.PP
Promela (prom)
.RS 4
The Promela language is supported via the included version of SpinS, which generates C code implementing the PINS interface\&. See
\m[blue]\fBSpin website\fR\m[]\&\s-2\u[4]\d\s+2
and
\m[blue]\fBSpinS: Extending LTSmin with Promela through SpinJa\fR\m[]\&\s-2\u[5]\d\s+2\&.
.RE
.PP
UPPAAL (opaal)
.RS 4
The UPPAAL xml language for timed automata is supported via the opaal successor generator\&. Currently only multi\-core reachability is supported (\fBopaal2lts-mc\fR(1))\&. See the opaal website:
\m[blue]\fBopaal website\fR\m[]\&\s-2\u[6]\d\s+2
.RE
.PP
PBES (pbes)
.RS 4
Specifications in
\fIpbes\fR
format generated by
\fBlps2pbes\fR(1)
are reduced to parity games\&. These can then be solved (symbolically) by
\fBspgsolver\fR(1)\&.
.RE
.PP
C\-code (pins)
.RS 4
LTSmin enables linking to language modules provided as
\&.so\-files\&. The file
dlopen\-api\&.h
needs to be included in the C\-code\&. The
pins2lts
tools will load the binary at runtime\&. See
\fBpins2lts-seq\fR(1),
\fBpins2lts-mc\fR(1),
\fBpins2lts-dist\fR(1),
\fBpins2lts-sym\fR(1)\&.
.RE
.SH "STATE SPACE EXPLORATION AND ANALYSIS TOOLS"
.sp
The LTSmin toolset has four different tools for reachability, checking for deadlocks, actions and invariants and verification of properties in Linear Temporal Logic (LTL) or modal mu\-calculus\&.
.PP
<prefix>2lts\-sym
.RS 4
Symbolic tools that use decision diagrams for manipulating sets of states\&. The optional output produced by these tools is an ETF model\&.
.sp
See
\fBdve2lts-sym\fR(1),
\fBetf2lts-sym\fR(1),
\fBlps2lts-sym\fR(1),
\fBlpo2lts-sym\fR(1),
\fBpbes2lts-sym\fR(1),
\fBmapa2lts-sym\fR(1)
and
\fBprom2lts-sym\fR(1)\&.
.sp
To use multi\-core decision diagrams, choose either Sylvan or LDDmc as DD package using the
\-\-vset
option\&.
.RE
.PP
<prefix>2lts\-seq
.RS 4
Sequential tools that enumerate states and can use both decision diagrams and (tree\-compressed) hash tables to represent sets of states\&. The optional output produced by these tools is an explicit LTS\&. These tools are based on an extended version of the
\m[blue]\fBGeneral State Exploring Algorithm (GSEA)\fR\m[]\&\s-2\u[7]\d\s+2\&.
.sp
See
\fBdve2lts-seq\fR(1),
\fBetf2lts-seq\fR(1),
\fBlps2lts-seq\fR(1),
\fBlpo2lts-seq\fR(1),
\fBpbes2lts-seq\fR(1)
and
\fBprom2lts-seq\fR(1)\&.
.RE
.PP
<prefix>2lts\-mc
.RS 4
Concurrent (multi\-core) state space generators and model checkers\&. Enumeration uses lockless (tree\-compressed) hash tables to represent sets of states\&. Model checking of LTL is supported by a set of multi\-core NDFS algorithms\&. To input LTL\-formulae, one can use the PINS2PINS wrapper (\-\-ltl) or an LTL cross\-product computed by the frontend (DiVinE 2 property models or PROMELA models via SpinS with never claim)\&.
.sp
See
\fBdve2lts-mc\fR(1),
\fBetf2lts-mc\fR(1),
\fBlps2lts-mc\fR(1),
\fBlpo2lts-mc\fR(1),
\fBpbes2lts-mc\fR(1),
\fBopaal2lts-mc\fR(1),
\fBprom2lts-mc\fR(1)
and
\fBltsmin-ltl\fR(5)\&.
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
MacOS X only supports the multiple process architecture from version 10\&.7 (Lion)\&.
.RE
.RE
.PP
<prefix>2lts\-dist
.RS 4
Distributed state space generators that enumerate states and use distributed hash tables for storing sets of states\&. The optional output produced by these tools is an explicit LTS\&. These tools work with MPI, multiple threads or multiple process whenever possible and available\&. For example:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
MacOS X does not support the multiple process architecture at this time\&.
.RE
.sp
See
\fBdve2lts-dist\fR(1),
\fBetf2lts-dist\fR(1),
\fBlps2lts-dist\fR(1),
\fBlpo2lts-dist\fR(1),
\fBpbes2lts-dist\fR(1),
\fBmapa2lts-dist\fR(1),
\fBnips2lts-dist\fR(1), and
\fBspinja2lts-dist\fR(1)
.RE
.SH "PINS\-TO\-PINS WRAPPERS"
.sp
Most of the analysis tools offer the following options, which are implemented as a layer between the language modules and the analysis algoritms\&.
.PP
caching
.RS 4
Enable transition caching with the
\-c
option\&.
.RE
.PP
regrouping
.RS 4
Choose regrouping and reordering heuristics with the
\-r
option\&. The following regroup macros are available\&.
.PP
gs
.RS 4
Group Safely; macro for "\fBgc\fR,\fBgr\fR,\fBcw\fR,\fBrs\fR"; almost always a win\&.
.RE
.PP
ga
.RS 4
Group Aggressively (row subsumption); macro for "\fBgc\fR,\fBrs\fR,\fBru\fR,\fBcw\fR,\fBrs\fR"; can be a huge win, but in some cases causes slower state space generation\&.
.RE
.PP
gsa
.RS 4
Group Simulated Annealing; macro for "\fBgc\fR,\fBgr\fR,\fBcsa\fR,\fBrs\fR"; almost always a win; usually better than
\fBgs\fR\&.
.RE
.PP
gc
.RS 4
Group Columns; macro for "\fBcs\fR,\fBcn\fR"\&.
.RE
.PP
gr
.RS 4
Group Rows; macro for "\fBrs\fR,\fBrn\fR"\&.
.RE
.PP
cs
.RS 4
Column Sort; sort columns lexicographically\&.
.RE
.PP
cn
.RS 4
Column Nub; (temporarily) group duplicate columns, thereby making
\fIca\fR
more tractable\&. Requires
\fBcs\fR\&.
.RE
.PP
cw
.RS 4
Column sWap; minimize distance between columns by swapping them heuristically\&. This reordering improves performance of the symbolic data structures\&.
.RE
.PP
ca
.RS 4
Column All permutations; try to find the column permutation with the best cost metric\&. Potentially, this is an expensive operation\&.
.RE
.PP
csa
.RS 4
Column Simulated Annealing; minimize distance between columns by swapping them using simulated annealing\&.
.RE
.PP
rs
.RS 4
Row Sort; sort rows lexicographically\&.
.RE
.PP
rn
.RS 4
Row Nub; remove duplicate rows from the dependency matrix\&. This is always a win\&. Requires
\fBrs\fR\&.
.RE
.PP
ru
.RS 4
Row sUbsume; try to remove more rows than nubbing, thereby trading speed for memory\&. Requires
\fBrs\fR\&.
.RE
.PP
w2W
.RS 4
Over\-approximate all must\-write to may\-write\&. May\-write supports the copy (\-) dependency\&.
.RE
.PP
r2+
.RS 4
Over\-approximate read to read+write\&. Allows read dependencies to also subsume write dependencies\&.
.RE
.PP
w2+
.RS 4
Over\-approximate must\-write to read+write\&. Allows must\-write dependencies to also subsume read dependencies\&.
.RE
.PP
W2+
.RS 4
Over\-approximate may\-write to read+write\&. Allows must\-write dependencies to also subsume read dependencies\&.
.RE
.PP
\-2r
.RS 4
Over\-approximate copy to read\&. May be useful for testing whether the dependency matrix is correct\&.
.RE
.PP
rb4w
.RS 4
Use special heuristics to move read dependencies before write dependences\&. Often a win in symbolic state space generation\&.
.RE
.PP
mm
.RS 4
Writes metrics of the selected (\fBsr\fR,
\fBsw\fR,
\fBsc\fR) matrix to stdout\&. The following metrics are printed:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Event span: the total distance between the minimum and maximum column of rows\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Normalized event span: the event span divided by the size of the matrix (rows x columns)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Weighted event span: the weighted event span, the event span, including a moment signifying the location of the span\&. See, Siminiceanu et al\&., we use moment 1\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Normalized weighted event span: the weighted event span divided by the size of the matrix (rows x column)\&.
.RE
.RE
.PP
sr
.RS 4
Select the read matrix for
\fBcs\fR,
\fBcsa\fR,
\fBcw\fR,
\fBca\fR,
\fBrs\fR,
\fBbcm\fR,
\fBbs\fR,
\fBbk\fR,
\fBvcm\fR,
\fBvacm\fR,
\fBvgps\fR
and
\fBmm\fR\&.
.RE
.PP
sw
.RS 4
Select the write matrix (default) for
\fBcs\fR,
\fBcsa\fR,
\fBcw\fR,
\fBca\fR,
\fBrs\fR,
\fBbcm\fR,
\fBbs\fR,
\fBbk\fR,
\fBvcm\fR,
\fBvacm\fR,
\fBvgps\fR
and
\fBmm\fR\&. The write matrix is the default selection, because only write dependencies can create new nodes in decision diagrams\&. A bad variable order in the write matrix thus leads to a large number of peak nodes during reachability analysis\&. A bad variable order in the read matrix can also lead to a slow reachability analysis, but typically not as severe as a bad variable order in the write matrix\&. Slow reachability analysis due to a bad variable order in the read matrix causes many recursive calls to the relational product operation\&. Typically it is best that read dependencies are moved to the top DD level, thus left most in the read matrix\&.
.RE
.PP
sc
.RS 4
Select the combined matrix for
\fBcs\fR,
\fBcsa\fR,
\fBcw\fR,
\fBca\fR,
\fBrs\fR,
\fBbcm\fR,
\fBbs\fR,
\fBbk\fR,
\fBvcm\fR,
\fBvacm\fR,
\fBvgps\fR
and
\fBmm\fR\&. The combined matrix is the logical or of the read and write matrix\&.
.RE
.PP
bg
.RS 4
Use a bipartite graph (default) for
\fBbcm\fR,
\fBbk\fR,
\fBbs\fR,
\fBvcm\fR,
\fBvacm\fR
and
\fBvgps\fR\&.
.RE
.PP
tg
.RS 4
Create a total graph of the bipartite graph for
\fBbcm\fR,
\fBbk\fR,
\fBbs\fR,
\fBvcm\fR,
\fBvacm\fR
and
\fBvgps\fR\&. This adds more vertices and edges thus increasing computation time, but sometimes provides a better ordering\&.
.RE
.sp
Below, the sparse matrix algorithms prefixed with
\fBb\fR
are only available when LTSmin is compiled with Boost\&. Algorithms prefixed with
\fBv\fR
are only available when LTSmin is compiled with ViennaCL\&.
.PP
bcm
.RS 4
Apply Boost\(cqs Cuthill\-McKee ordering\&.
.RE
.PP
bk
.RS 4
Apply Boost\(cqs King ordering\&.
.RE
.PP
bs
.RS 4
Apply Boost\(cqs Sloan ordering\&.
.RE
.PP
vcm
.RS 4
Apply ViennaCL\(cqs Cuthill\-McKee ordering\&.
.RE
.PP
vacm
.RS 4
Apply ViennaCL\(cqs advanced Cuthill\-McKee ordering\&.
.RE
.PP
vgps
.RS 4
Apply ViennaCl\(cqs Gibbs\-Poole\-Stockmeyer ordering\&.
.RE
.PP
f
.RS 4
Apply FORCE ordering\&.
.RE
.RE
.PP
partial order reduction
.RS 4
Enable POR with the
\-\-por
option\&.
.RE
.PP
ltl
.RS 4
Generate a B\(:uchi automaton and enable detection of accepting cycles with the
\-\-ltl
option\&. Only available in the
*2lts\-seq
and
*2lts\-mc
tools\&. See
\fBltsmin-ltl\fR(5)\&.
.RE
.PP
mu\-calculus
.RS 4
Generate a parity game with the
\-\-mucalc
option\&. See
\fBltsmin-mucalc\fR(5)\&.
.RE
.SH "STATE SPACE REDUCTION TOOLS"
.sp
The LTSmin toolset provides distributed minimization with respect to various bisimulations\&.
.PP
ltsmin\-reduce
.RS 4
Sequential minimization modulo strong and branching bisimulation, as well as modulo lumping of CTMCs\&. See
\fBltsmin-reduce\fR(1)\&.
.RE
.PP
ltsmin\-reduce\-dist
.RS 4
Distributed minimization modulo strong and branching bisimulation\&. This tool has an implementation of the new inductive signature algorithms that work on tau\-cycle free LTSs\&. See
\fBltsmin-reduce-dist\fR(1)\&.
.RE
.PP
ltsmin\-compare
.RS 4
Compare two transitions systems, using the same equivalences as supported by ltsmin\-reduce\&. See
\fBltsmin-compare\fR(1)\&.
.RE
.SH "TAU CYCLE ELIMINATION TOOL"
.sp
The LTSmin toolset provides distributed tau\-cycle elimination\&.
.PP
ce\-mpi
.RS 4
Distributed tau cycle elimination\&. See
\fBce-mpi\fR(1)\&.
.RE
.SH "TORX RPC INTERFACES"
.sp
The LTSmin toolset provides TorX RPC interfaces\&.
.PP
<prefix>2torx
.RS 4
TorX RPC interface\&.
.sp
See
\fBdve2torx\fR(1),
\fBetf2torx\fR(1),
\fBlps2torx\fR(1),
\fBlpo2torx\fR(1), and
\fBprom2torx\fR(1)\&.
.RE
.SH "TRACE PRETTY PRINTING"
.PP
ltsmin\-printtrace
.RS 4
Pretty print traces\&. See
\fBltsmin-printtrace\fR(1)\&.
.RE
.SH "CONVERSION TOOLS"
.PP
etf\-convert
.RS 4
Translate ETF to DVE\&. See
\fBetf-convert\fR(1)\&.
.RE
.PP
ltsmin\-convert
.RS 4
Convert LTS file formats\&. See
\fBltsmin-convert\fR(1)\&.
.RE
.PP
gcf
.RS 4
Utility for creating and extracting
\fIGeneric Container Format\fR
archives\&. See
\fBgcf\fR(1)\&.
.RE
.SH "FILE FORMATS"
.sp
The following file formats are supported:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Directory format (\fI*\&.dir\fR,
\fI*\&.dz\fR
and
\fI*\&.gcf\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Vector format (\fI*\&.dir\fR,
\fI*\&.gcd\fR,
\fI*\&.gcf\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Binary Coded Graphs (\fI*\&.bcg\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Aldebaran Format (\fI*\&.aut\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
FSM Format (\fI*\&.fsm\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
MRMC/Prism (\fI*\&.tra\fR+\fI*\&.lab\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
PGSolver format (\fI*\&.pg\fR)
.RE
.sp
If a tool operates in streaming mode then support for file formats is limited, as can be seen in the following table:
.TS
allbox tab(:);
ltB ltB ltB.
T{
Format
T}:T{
Streaming mode
T}:T{
Load/Store mode
T}
.T&
lt lt lt
lt lt lt
lt lt lt
lt lt lt
lt lt lt
lt lt lt
lt lt lt.
T{
.sp
DIR
T}:T{
.sp
R/W
T}:T{
.sp
R/W
T}
T{
.sp
VEC
T}:T{
.sp
R/W
T}:T{
.sp
R/W
T}
T{
.sp
BCG
T}:T{
.sp
W
T}:T{
.sp
R/W
T}
T{
.sp
AUT
T}:T{
.sp
W
T}:T{
.sp
R/W
T}
T{
.sp
FSM
T}:T{
.sp
W
T}:T{
.sp
W
T}
T{
.sp
TRA
T}:T{
.sp
\-
T}:T{
.sp
R/W
T}
T{
.sp
PG
T}:T{
.sp
\-
T}:T{
.sp
W
T}
.TE
.sp 1
.sp
The directory format uses multiple files to store an LTS\&. The various extension explain how these files are stored in the underlying file system\&. The \fI*\&.dir\fR format uses multiple files in a directory without compression\&. If the LTS has one edge label, no state labels and does not store state vectors then these files are backwards compatible\&. Neither the \fI*\&.dz\fR nor the \fI*\&.gcf\fR formats are backwards compatible\&. Both formats use compression\&. The first uses a directory for the files, second interleaves files into a single file\&.
.sp
If you try to open a \fI*\&.dir\fR with the old mCRL tools and you get the error message:
.sp
.if n \{\
.RS 4
.\}
.nf
wrong file version: 0
.fi
.if n \{\
.RE
.\}
.sp
.sp
then the directory is probably compressed\&. If that happens then you may convert the directory by typing the command:
.sp
.if n \{\
.RS 4
.\}
.nf
ltsmin\-convert bad\&.dir good\&.dir
.fi
.if n \{\
.RE
.\}
.sp
.SH "MINI TUTORIAL"
.sp
As running example, we use a model of the bounded retransmission protocol from the mCRL examples\&. Assuming we have copied the file \fIbrp\&.mcrl\fR to our working directory, we can linearize the model with the following command:
.sp
.if n \{\
.RS 4
.\}
.nf
mcrl \-regular \-nocluster brp\&.mcrl
.fi
.if n \{\
.RE
.\}
.sp
.sp
This produces a file named \fIbrp\&.tbf\fR\&. This is the input for the state space generator\&. Just to see how many states and transitions are produced, we can run the command
.sp
.if n \{\
.RS 4
.\}
.nf
lpo2lts\-seq brp\&.tbf
.fi
.if n \{\
.RE
.\}
.sp
.sp
Assuming that the model is small and CADP is installed, we can simply generate a BCG file (this requires BFS exploration order)
.sp
.if n \{\
.RS 4
.\}
.nf
lpo2lts\-seq \-\-strategy=bfs brp\&.tbf brp\&.bcg
.fi
.if n \{\
.RE
.\}
.sp
.sp
and then use CADP\&.
.sp
If it turns out that the LTS was very big then we might want to use the distributed tools to generate and reduce the LTS:
.sp
.if n \{\
.RS 4
.\}
.nf
lpo2lts\-dist \-\-workers=4 brp\&.tbf brp\&.dir
ltsmin\-reduce\-dist \-\-workers=4 brp\&.dir brp\-s\&.dir
ltsmin\-convert \-\-rdwr \-\-segments 1 brp\-s\&.dir brp\-s\&.bcg
.fi
.if n \{\
.RE
.\}
.sp
.sp
The tools start the command \fImpirun\fR silently in the background with the suitable options\&. Alternatively, one may wish to call \fImpirun\fR with additional options\&. This can be done using the \fI\-\-mpi\fR option, e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
mpirun \-np 4 \-mca btl tcp,self lpo2lts\-dist \-\-mpi brp\&.tbf brp\&.dir
.fi
.if n \{\
.RE
.\}
.sp
.sp
The dir format used to store the LTS in the example is backwards compatible with the mCRL toolset\&. We also support a newer format that adds compression:
.sp
.if n \{\
.RS 4
.\}
.nf
lpo2lts\-dist \-\-workers=4 brp\&.tbf brp\&.gcf
ltsmin\-reduce\-dist \-\-workers=4 brp\&.gcf brp\-s\&.gcf
ltsmin\-convert \-\-rdwr \-\-segments 1 brp\-s\&.gcf brp\-s\&.bcg
.fi
.if n \{\
.RE
.\}
.sp
.sp
When the model is suitable, state space generation can be speeded up by memoizing next state calls:
.sp
.if n \{\
.RS 4
.\}
.nf
lpo2lts\-dist \-\-workers=4 \-\-cache brp\&.tbf brp\&.gcf
.fi
.if n \{\
.RE
.\}
.sp
.SS "Symbolic tools"
.sp
The LTSmin toolset also has a symbolic reachability tool\&. If we want to know the number of states, we can give the command:
.sp
.if n \{\
.RS 4
.\}
.nf
lpo2lts\-sym brp\&.tbf
.fi
.if n \{\
.RE
.\}
.sp
.sp
This command will compute the necessary part of the transition relation and the set of reachable states\&. If we want to record the transition relation symbolically then we can do so in the form of an ETF file:
.sp
.if n \{\
.RS 4
.\}
.nf
lpo2lts\-sym brp\&.tbf brp\&.etf
.fi
.if n \{\
.RE
.\}
.sp
.sp
This etf file can be translated to DVE for model checking:
.sp
.if n \{\
.RS 4
.\}
.nf
etf\-convert brp\&.etf brp\&.dve
.fi
.if n \{\
.RE
.\}
.sp
.sp
It can also serve as the input for state space generation
.sp
.if n \{\
.RS 4
.\}
.nf
etf2lts\-dist \-\-workers=4 brp\&.etf brp\-s\&.gcf
.fi
.if n \{\
.RE
.\}
.sp
.SS "Parity game solver"
.sp
The LTSmin toolset finally includes a parity game solver:
.sp
.if n \{\
.RS 4
.\}
.nf
etf2lts\-sym \-\-mucalc=property\&.mcf model\&.etf \-\-pg\-write=game\&.spg
spgsolver game\&.spg
.fi
.if n \{\
.RE
.\}
.sp
.sp
To tool reports whether the game successfully terminates\&.
.SH "NOTES"
.IP " 1." 4
DiVinE website
.RS 4
\%http://divine.fi.muni.cz/
.RE
.IP " 2." 4
mCRL2 website
.RS 4
\%http://www.mcrl2.org/
.RE
.IP " 3." 4
muCRL website
.RS 4
\%http://www.cwi.nl/~mcrl/
.RE
.IP " 4." 4
Spin website
.RS 4
\%http://spinroot.com/
.RE
.IP " 5." 4
SpinS: Extending LTSmin with Promela through SpinJa
.RS 4
\%http://dx.doi.org/10.1016/j.entcs.2013.07.007
.RE
.IP " 6." 4
opaal website
.RS 4
\%https://code.launchpad.net/~opaal-developers/opaal/opaal-ltsmin-succgen
.RE
.IP " 7." 4
General State Exploring Algorithm (GSEA)
.RS 4
\%http://dx.doi.org/10.1007/s10009-008-0093-y
.RE
